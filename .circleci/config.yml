version: 2
jobs:
  checkout_code:
    working_directory: ~/simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .

  python_dependencies:
    working_directory: ~/simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Dependencies
          command: |
            pipenv install --dev

  static_analysis:
    working_directory: ~/simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Static Analysis
          command: |
            pipenv install --dev
            pipenv run flake8
  unit_tests:
    working_directory: ~/simplezat
    docker:
      - image: circleci/python:3.7.1
      - image: circleci/postgres:11.1-alpine-ram
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Unit Tests
          command: |
            pipenv install --dev
            cd simplezat && export DATABASE_HOST=localhost pipenv run pytest 

  acceptance_tests:
    working_directory: ~/simplezat
    docker:
      - image: circleci/node:8.14-browsers
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Acceptance Tests
          command: |
            cd test
            npm install
            CYPRESS_baseUrl=http://35.240.154.95 ./node_modules/.bin/cypress run --spec 'cypress/integration/draf/*'
      
  deploy_dev:
    working_directory: ~/simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Stable Images
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS

            docker build -t 400206/simplezat-nginx:stable -f nginx/Dockerfile nginx/
            docker tag 400206/simplezat-nginx:stable 400206/simplezat-nginx:$CIRCLE_SHA1
            docker push 400206/simplezat-nginx:stable
            docker push 400206/simplezat-nginx:$CIRCLE_SHA1

            docker build -t 400206/simplezat:stable -f Dockerfile.dev .
            docker tag 400206/simplezat:stable 400206/simplezat:$CIRCLE_SHA1
            docker push 400206/simplezat:stable
            docker push 400206/simplezat:$CIRCLE_SHA1
      - add_ssh_keys
      - run:
          name: Deploy to Development Server
          command: |
            cd deployment
            ssh-keyscan -H 35.240.154.95 >> ~/.ssh/known_hosts
            pipenv install
            pipenv run ansible-playbook -i server_hosts playbooks/dev.yml --extra-vars "project_root=~/simplezat"
  
  deploy_production:
    working_directory: ~/simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Live Images
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker pull 400206/simplezat-nginx:stable
            docker tag 400206/simplezat-nginx:stable 400206/simplezat-nginx:live
            docker push 400206/simplezat-nginx:live
            docker build -t 400206/simplezat:live -f Dockerfile.prod .
            docker tag 400206/simplezat:live 400206/simplezat:$CIRCLE_SHA1
            docker push 400206/simplezat:live
            docker push 400206/simplezat:$CIRCLE_SHA1

      - add_ssh_keys
      - run:
          name: Deploy to Production Server
          command: |
            cd deployment
            ssh-keyscan -H 35.241.75.199 >> ~/.ssh/known_hosts
            pipenv install
            pipenv run ansible-playbook -i server_hosts playbooks/prod.yml --extra-vars "project_root=~/simplezat"

workflows:
  version: 2
  simplezat_pipeline:
    jobs:
      - checkout_code
      - python_dependencies:
          requires:
            - checkout_code
      - static_analysis:
          requires:
            - python_dependencies
      - unit_tests:
          requires:
            - python_dependencies
      - deploy_dev:
          requires:
            - unit_tests
      - acceptance_tests:
          requires:
            - deploy_dev
      - wait_for_approval:
          type: approval
          requires:
            - acceptance_tests
      - deploy_production:
          requires:
            - wait_for_approval
